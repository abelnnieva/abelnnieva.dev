---
import { calculateReadingTime } from "@/lib/utils";
import { getCollection } from "astro:content";
import Container from "@/components/Container.astro";
import Layout from "@/layouts/Layout.astro";
import Note from "@/components/Note.astro";
import PageHeader from "@/components/PageHeader.astro";

export async function getStaticPaths() {
  const allTopics = await getCollection("topics");
  return allTopics.map((topic) => ({
    params: { slug: topic.id },
    props: { topic },
  }));
}

const { topic } = Astro.props;

const allNotes = await getCollection("notes", ({ data }) => {
  return data.isDraft !== true && data.topic.id === topic.id;
});

allNotes.sort(
  (a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime()
);
---

<Layout
  title={`Abel N. Nieva - Notes on ${topic.data.name}`}
  description={topic.data.description}
>
  <main>
    <PageHeader
      title={`Notes on ${topic.data.name}`}
      text={topic.data.description}
    />
    <Container class="grid grid-cols-1 md:grid-cols-2 md:gap-12 py-6 md:py-12">
      {
        allNotes.map(async (note) => {
          const readingTime = calculateReadingTime(note.body);
          return (
            <div class="md:col-span-1">
              <Note
                slug={note.slug}
                note={note.data}
                readingTime={readingTime}
                class="h-full"
              />
            </div>
          );
        })
      }
    </Container>
  </main>
</Layout>
