---
import { calculateReadingTime } from "../lib/utils";
import { getCollection, getEntry } from "astro:content";
import Button from "../components/Button.astro";
import Container from "../components/Container.astro";
import Layout from "../layouts/Layout.astro";
import Logo from "../components/Logo.astro";
import Note from "../components/Note.astro";
import PageHeader from "../components/PageHeader.astro";
import Sidebar from "../components/Sidebar.astro";
import SidebarSection from "../components/SidebarSection.astro";
import SidebarSectionHeading from "../components/SidebarSectionHeading.astro";

const allNotes = await getCollection("notes", ({ data }) => {
  return data.isDraft !== true;
});
allNotes.sort(
  (a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime()
);
const allTopics = await getCollection("topics");
---

<Layout>
  <main>
    <PageHeader
      title="Notes on software, product development, and beyond."
      text="A mix of thoughts on programming, building products, and other random topics. Raw and unstructured."
    />
    <Container class="grid grid-cols-1 md:grid-cols-12 py-6 md:py-12">
      <div class="md:col-span-7">
        <div class="flex flex-col gap-12">
          {
            allNotes.map(async (note) => {
              const topic = await getEntry(note.data.topic);
              const logo = await getEntry(topic.data.logo);
              const readingTime = calculateReadingTime(note.body);
              return (
                <Note
                  slug={note.slug}
                  title={note.data.title}
                  publishDate={note.data.publishDate}
                  description={note.data.description}
                  topic={{
                    name: topic.data.name,
                    description: topic.data.description,
                    logo: logo.data,
                  }}
                  readingTime={readingTime}
                />
              );
            })
          }
        </div>
      </div>
      <div class="md:col-span-4 md:col-start-9">
        <Sidebar>
          <SidebarSection>
            <SidebarSectionHeading title="All Topics" />
            <ul
              class="px-4 py-3 flex content-start flex-wrap items-center gap-3"
            >
              {
                allTopics.map(async (topic) => {
                  const logo = await getEntry(topic.data.logo);
                  return (
                    <li>
                      <Button
                        as="a"
                        size="sm"
                        color="secondary"
                        href={`/topics/${topic.data.logo.id}`}
                      >
                        <Logo
                          name={logo.data.name}
                          image={logo.data.image}
                          size="2xs"
                        />
                        {topic.data.name}
                      </Button>
                    </li>
                  );
                })
              }
            </ul>
          </SidebarSection>
        </Sidebar>
      </div>
    </Container>
  </main>
</Layout>
