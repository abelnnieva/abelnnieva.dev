---
import { getCollection, getEntry } from "astro:content";
import Container from "@/components/Container.astro";
import ExternalLink from "@/components/ExternalLink.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import Heading from "@/components/Heading.astro";
import Layout from "@/layouts/Layout.astro";
import Metadata from "@/components/Metadata.astro";
import MetadataItem from "@/components/MetadataItem.astro";
import PageHeader from "@/components/PageHeader.astro";
import Section from "@/components/Section.astro";
import SectionHeading from "@/components/SectionHeading.astro";
import Text from "@/components/Text.astro";

const allWorkExperience = await getCollection("work-experience");
---

<Layout>
  <main>
    <PageHeader
      title="An overview of my career highlights and expertise."
      text="Explore my professional experience and technical skills."
    />
    <Container class="grid grid-cols-1 md:grid-cols-12 gap-12 md:gap-0">
      <div class="md:col-span-7">
        <Section>
          <SectionHeading title="Work Experience" />
          <div class="flex flex-col gap-12">
            {
              allWorkExperience.reverse().map(async (workExperience) => {
                const companyCollectionEntry = await getEntry(
                  workExperience.data.company
                );
                return (
                  <article class="flex flex-col gap-2">
                    <Heading as="h4">{workExperience.data.position}</Heading>
                    <Metadata size="sm">
                      <MetadataItem size="sm">
                        <FormattedDate
                          date={workExperience.data.startDate}
                          format="YYYY-MM"
                        />
                      </MetadataItem>
                      <MetadataItem size="sm">
                        {workExperience.data.isActivePosition ? (
                          "present"
                        ) : (
                          <FormattedDate
                            date={workExperience.data.endDate}
                            format="YYYY-MM"
                          />
                        )}
                      </MetadataItem>
                      <MetadataItem size="sm">
                        {companyCollectionEntry.data.url ? (
                          <ExternalLink href={companyCollectionEntry.data.url}>
                            {companyCollectionEntry.data.name}
                          </ExternalLink>
                        ) : (
                          companyCollectionEntry.data.name
                        )}
                      </MetadataItem>
                    </Metadata>
                    <Text as="p" color="gray.500" size="sm">
                      {workExperience.data.description}
                    </Text>
                  </article>
                );
              })
            }
          </div>
        </Section>
      </div>
      <div class="md:col-span-4 md:col-start-9 py-6 md:py-10"></div>
    </Container>
  </main>
</Layout>
