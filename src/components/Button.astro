---
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  color?: keyof typeof colorClasses;
  size?: keyof typeof sizeClasses;
}>;

const {
  as: Tag,
  class: className,
  color = "primary",
  size = "base",
  ...props
} = Astro.props;

const baseClasses =
  "transition inline-flex items-center gap-1 font-medium rounded-full";

export const colorClasses = {
  primary:
    "text-white bg-blue-700 hover:bg-blue-800 dark:bg-blue-600 dark:hover:bg-blue-700",
  secondary:
    "text-gray-900 bg-white border border-gray-200 hover:bg-gray-100 hover:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700",
};

export const sizeClasses = {
  xs: "h-8 px-3 text-xs",
  sm: "h-9 px-3 text-sm",
  base: "h-10 px-5 text-sm",
};

const classes = [
  baseClasses,
  colorClasses[color as keyof typeof colorClasses],
  sizeClasses[size as keyof typeof sizeClasses],
  className,
];
---

<Tag class:list={classes} {...props}>
  <slot />
</Tag>
